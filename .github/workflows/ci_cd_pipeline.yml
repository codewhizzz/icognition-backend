name: CI/CD Pipeline for FastAPI Application

on:
  push:
    branches:
      - main
      - develop

env:
  ENVIRONMENT: ${{ github.ref == 'refs/heads/develop' && 'staging' || 'production' }}
  DATABASE_URL: ${{ github.ref == 'refs/heads/develop' && secrets.STAGING_DATABASE_URL || secrets.PRODUCTION_DATABASE_URL }}
  GCP_SA_KEY: ${{ github.ref == 'refs/heads/develop' && secrets.GCP_SA_KEY_STG || secrets.GCP_SA_KEY_PROD }}
  PROJECT_ID: ${{ github.ref == 'refs/heads/develop' && 'stage-413302' || 'micro-harmony-413302' }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Print DATABASE_URL for debugging
        run: echo "DATABASE_URL is $DATABASE_URL"
      - name: Create mock tests/data directory
        run: mkdir -p tests/data && touch tests/data/dummy.txt
      - name: Run tests excluding tests/data/ directory
        run: pytest --ignore=tests/data/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Authenticate with Google Cloud
        uses: google-github-actions/setup-gcloud@latest
        with:
          service_account_key: ${{ env.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
      - name: Configure gcloud CLI
        run: gcloud config set project $PROJECT_ID
      - name: Deploy to Google App Engine
        run: gcloud app deploy app.yaml --quiet
      - name: Run Alembic migrations
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: alembic upgrade head

