name: CI/CD Pipeline for FastAPI Application

on:
  push:
    branches:
      - main
      - develop

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check DATABASE_URL
        id: check_db_url
        run: |
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "::set-output name=skip_db_tests::true"
          else
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
            echo "::set-output name=skip_db_tests::false"
          fi

      - name: Run tests excluding database dependent tests
        if: steps.check_db_url.outputs.skip_db_tests == 'true'
        run: pytest -k 'not requires_database_url'
      
      - name: Run all tests if DATABASE_URL is set
        if: steps.check_db_url.outputs.skip_db_tests == 'false'
        run: pytest --ignore=tests/data/

  deploy:
    needs: setup-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Authenticate with Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ needs.setup-and-test.outputs.gcp_sa_key }}
          project_id: ${{ needs.setup-and-test.outputs.project_id }}
      - name: Configure gcloud CLI
        run: gcloud config set project ${{ needs.setup-and-test.outputs.project_id }}
      - name: Deploy to Google App Engine
        run: gcloud app deploy app.yaml --quiet
      - name: Run Alembic migrations
        run: alembic upgrade head
        env:
          DATABASE_URL: ${{ needs.setup-and-test.outputs.database_url }}

