name: CI/CD Pipeline for FastAPI Application

on:
  push:
    branches:
      - main
      - develop

jobs:
  setup-environment-variables:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      database_url: ${{ steps.set-db-url.outputs.database_url }}
      gcp_sa_key: ${{ steps.set-gcp-key.outputs.gcp_sa_key }}
      project_id: ${{ steps.set-project-id.outputs.project_id }}
    steps:
      - id: set-env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "::set-output name=environment::staging"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "::set-output name=environment::production"
          fi
      - id: set-db-url
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "::set-output name=database_url::${{ secrets.STAGING_DATABASE_URL }}"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "::set-output name=database_url::${{ secrets.PRODUCTION_DATABASE_URL }}"
          fi
      - id: set-gcp-key
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "::set-output name=gcp_sa_key::${{ secrets.GCP_SA_KEY_STG }}"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "::set-output name=gcp_sa_key::${{ secrets.GCP_SA_KEY_PROD }}"
          fi
      - id: set-project-id
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "::set-output name=project_id::stage-413302"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "::set-output name=project_id::micro-harmony-413302"
          fi

  deploy:
    needs: setup-environment-variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Authenticate with Google Cloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ github.ref == 'refs/heads/main' && secrets.GCP_SA_KEY_PROD || github.ref == 'refs/heads/develop' && secrets.GCP_SA_KEY_STG }}
          project_id: ${{ needs.setup-environment-variables.outputs.project_id }}
          export_default_credentials: true
      - name: Configure gcloud CLI
        run: |
          gcloud auth list
          gcloud config list
          gcloud config set project ${{ needs.setup-environment-variables.outputs.project_id }}
      - name: Deploy to Google App Engine
        run: gcloud app deploy app/app.yaml --quiet
      - name: Run Alembic migrations
        run: alembic upgrade head
        env:
          DATABASE_URL: ${{ needs.setup-environment-variables.outputs.database_url }}

