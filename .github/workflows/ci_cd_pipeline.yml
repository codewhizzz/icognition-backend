name: CI/CD Pipeline for FastAPI Application

on:
  push:
    branches:
      - main
      - develop

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set ENVIRONMENT variable
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
            echo "DATABASE_URL=${{ secrets.STAGING_DATABASE_URL }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "DATABASE_URL=${{ secrets.PRODUCTION_DATABASE_URL }}" >> $GITHUB_ENV
          fi
      
      - name: Print environment variables for debugging
        run: |
          echo "ENVIRONMENT variable is set to $ENVIRONMENT"
          echo "DATABASE_URL is set to $DATABASE_URL"
      
      - name: Create mock tests/data directory
        run: mkdir -p tests/data && touch tests/data/dummy.txt
      
      - name: Run tests excluding tests/data/ directory
        run: pytest --ignore=tests/data/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Authenticate with Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ needs.setup-environment-variables.outputs.gcp_sa_key }}
          project_id: ${{ needs.setup-environment-variables.outputs.project_id }}
      - name: Configure gcloud CLI
        run: gcloud config set project ${{ needs.setup-environment-variables.outputs.project_id }}
      - name: Deploy to Google App Engine
        run: gcloud app deploy app.yaml --quiet
      - name: Run Alembic migrations
        run: alembic upgrade head
        env:
          DATABASE_URL: ${{ needs.setup-environment-variables.outputs.database_url }}

