name: CI/CD Pipeline for FastAPI Application

on:
  push:
    branches:
      - main
      - develop

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    outputs:
      DATABASE_URL: ${{ steps.set-env.outputs.DATABASE_URL }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Determine DATABASE_URL
        id: set-env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "::set-output name=DATABASE_URL::${{ secrets.STAGING_DATABASE_URL }}"
          else
            echo "::set-output name=DATABASE_URL::${{ secrets.PRODUCTION_DATABASE_URL }}"
          fi
      
      - name: Print DATABASE_URL for debugging
        run: echo "DATABASE_URL=${{ steps.set-env.outputs.DATABASE_URL }}"
      
      - name: Create mock tests/data directory
        run: mkdir -p tests/data && touch tests/data/dummy.txt
      
      - name: Run tests excluding tests/data/ directory
        run: pytest --ignore=tests/data/
  
  deploy:
    needs: setup-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Authenticate with Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Configure gcloud CLI
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Deploy to Google App Engine
        run: gcloud app deploy app.yaml --quiet
      
      - name: Run Alembic migrations
        env:
          DATABASE_URL: ${{ needs.setup-and-test.outputs.DATABASE_URL }}
        run: |
          alembic upgrade head

