name: CI/CD Pipeline for FastAPI Application

on:
  push:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set DATABASE_URL for testing
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "DATABASE_URL=${{ secrets.STAGING_DATABASE_URL }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "DATABASE_URL=${{ secrets.PRODUCTION_DATABASE_URL }}" >> $GITHUB_ENV
          fi

      - name: Print DATABASE_URL for debugging
        run: echo "Using DATABASE_URL: $DATABASE_URL"

      - name: Create mock tests/data directory
        run: mkdir -p tests/data && touch tests/data/dummy.txt

      - name: Run tests excluding tests/data/ directory
        run: pytest --ignore=tests/data/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate with Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure gcloud CLI
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to Google App Engine
        run: gcloud app deploy app.yaml --quiet

      - name: Run Alembic migrations
        run: alembic upgrade head
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

